version: "3.8"

services:
  db:
    image: postgres:alpine
    container_name: db
    hostname: db
    expose:
      - 5432
    environment:
      - POSTGRES_PASSWORD=njVys55V4r2U
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  api:
    image: ghcr.io/nikiforidi/picovpn-api:release
    container_name: api
    hostname: api
    command: /code/api
    expose:
      - 8000
    volumes:
      - ./entrypoint.sh:/code/entrypoint.sh:ro
    entrypoint: /code/entrypoint.sh
    depends_on:
      - db
    environment:
      - TELEGRAM_BOT_TOKEN=7602027535:AAGrPptEC__CbwGqT-6vFpc-SdnEBAAtiSY
      - POSTGRES_PASSWORD=njVys55V4r2U
      - TON_API_KEY=AH3ILIWOCWBB4SYAAAABBSD5COBSISAGV4HXAT4222X3CUF7RN3PNQBG4QF4UFZ56CFFD3A
      - TON_ACCOUNT_ID=UQCfkeI1uFsuDgW5j7WNwbtQwSqCe4C1_FCJNbfbo8ifF3xF

  app:
    image: ghcr.io/nikiforidi/picovpn-app:release_v2
    container_name: app
    hostname: app
    expose:
      - 3000
    depends_on:
      - api
    command: ["serve", "-s", "dist"]

  proxy:
    image: nginx:alpine
    container_name: proxy
    hostname: proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt/live/picovpn.ru/fullchain.pem:/etc/letsencrypt/live/picovpn.ru/fullchain.pem:ro
      - /etc/letsencrypt/live/picovpn.ru/privkey.pem:/etc/letsencrypt/live/picovpn.ru/privkey.pem:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
      - api
    command: nginx -g 'daemon off;'
  # daemon:
  #   image: ghcr.io/nikiforidi/picovpn-daemon:release
  #   container_name: daemon
  #   hostname: daemon
  #   expose:
  #     - 5000
  #   volumes:
  #     - /etc/ocserv/passwd:/etc/ocserv/passwd:rw
  #     - /usr/bin/ocpasswd:/usr/bin/ocpasswd:ro
  #   depends_on:
  #     - api
  #   command: /app/main